/*
 * This file is generated by jOOQ.
 */
package com.wehuddle.db.tables.records;


import com.wehuddle.db.tables.SprintIssue;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SprintIssueRecord extends UpdatableRecordImpl<SprintIssueRecord> implements Record3<UUID, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.sprint_issue.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.sprint_issue.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.sprint_issue.sprint_id</code>.
     */
    public void setSprintId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.sprint_issue.sprint_id</code>.
     */
    public UUID getSprintId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.sprint_issue.issue_id</code>.
     */
    public void setIssueId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.sprint_issue.issue_id</code>.
     */
    public UUID getIssueId() {
        return (UUID) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, UUID> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, UUID, UUID> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SprintIssue.SPRINT_ISSUE.ID;
    }

    @Override
    public Field<UUID> field2() {
        return SprintIssue.SPRINT_ISSUE.SPRINT_ID;
    }

    @Override
    public Field<UUID> field3() {
        return SprintIssue.SPRINT_ISSUE.ISSUE_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getSprintId();
    }

    @Override
    public UUID component3() {
        return getIssueId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getSprintId();
    }

    @Override
    public UUID value3() {
        return getIssueId();
    }

    @Override
    public SprintIssueRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SprintIssueRecord value2(UUID value) {
        setSprintId(value);
        return this;
    }

    @Override
    public SprintIssueRecord value3(UUID value) {
        setIssueId(value);
        return this;
    }

    @Override
    public SprintIssueRecord values(UUID value1, UUID value2, UUID value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SprintIssueRecord
     */
    public SprintIssueRecord() {
        super(SprintIssue.SPRINT_ISSUE);
    }

    /**
     * Create a detached, initialised SprintIssueRecord
     */
    public SprintIssueRecord(UUID id, UUID sprintId, UUID issueId) {
        super(SprintIssue.SPRINT_ISSUE);

        setId(id);
        setSprintId(sprintId);
        setIssueId(issueId);
    }
}
