/*
 * This file is generated by jOOQ.
 */
package com.wehuddle.db.tables.records;


import com.wehuddle.db.enums.IssueState;
import com.wehuddle.db.tables.Issue;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IssueRecord extends UpdatableRecordImpl<IssueRecord> implements Record11<UUID, Integer, String, Integer, IssueState, String, JSONB, JSONB, String, String, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.issue.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.issue.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.issue.github_issue_id</code>.
     */
    public void setGithubIssueId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.issue.github_issue_id</code>.
     */
    public Integer getGithubIssueId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.issue.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.issue.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.issue.number</code>.
     */
    public void setNumber(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.issue.number</code>.
     */
    public Integer getNumber() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.issue.state</code>.
     */
    public void setState(IssueState value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.issue.state</code>.
     */
    public IssueState getState() {
        return (IssueState) get(4);
    }

    /**
     * Setter for <code>public.issue.url</code>.
     */
    public void setUrl(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.issue.url</code>.
     */
    public String getUrl() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.issue.github_user</code>.
     */
    public void setGithubUser(JSONB value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.issue.github_user</code>.
     */
    public JSONB getGithubUser() {
        return (JSONB) get(6);
    }

    /**
     * Setter for <code>public.issue.assignees</code>.
     */
    public void setAssignees(JSONB value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.issue.assignees</code>.
     */
    public JSONB getAssignees() {
        return (JSONB) get(7);
    }

    /**
     * Setter for <code>public.issue.repo_name</code>.
     */
    public void setRepoName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.issue.repo_name</code>.
     */
    public String getRepoName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.issue.repo_url</code>.
     */
    public void setRepoUrl(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.issue.repo_url</code>.
     */
    public String getRepoUrl() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.issue.opened_at</code>.
     */
    public void setOpenedAt(OffsetDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.issue.opened_at</code>.
     */
    public OffsetDateTime getOpenedAt() {
        return (OffsetDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<UUID, Integer, String, Integer, IssueState, String, JSONB, JSONB, String, String, OffsetDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<UUID, Integer, String, Integer, IssueState, String, JSONB, JSONB, String, String, OffsetDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Issue.ISSUE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Issue.ISSUE.GITHUB_ISSUE_ID;
    }

    @Override
    public Field<String> field3() {
        return Issue.ISSUE.TITLE;
    }

    @Override
    public Field<Integer> field4() {
        return Issue.ISSUE.NUMBER;
    }

    @Override
    public Field<IssueState> field5() {
        return Issue.ISSUE.STATE;
    }

    @Override
    public Field<String> field6() {
        return Issue.ISSUE.URL;
    }

    @Override
    public Field<JSONB> field7() {
        return Issue.ISSUE.GITHUB_USER;
    }

    @Override
    public Field<JSONB> field8() {
        return Issue.ISSUE.ASSIGNEES;
    }

    @Override
    public Field<String> field9() {
        return Issue.ISSUE.REPO_NAME;
    }

    @Override
    public Field<String> field10() {
        return Issue.ISSUE.REPO_URL;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return Issue.ISSUE.OPENED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getGithubIssueId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public Integer component4() {
        return getNumber();
    }

    @Override
    public IssueState component5() {
        return getState();
    }

    @Override
    public String component6() {
        return getUrl();
    }

    @Override
    public JSONB component7() {
        return getGithubUser();
    }

    @Override
    public JSONB component8() {
        return getAssignees();
    }

    @Override
    public String component9() {
        return getRepoName();
    }

    @Override
    public String component10() {
        return getRepoUrl();
    }

    @Override
    public OffsetDateTime component11() {
        return getOpenedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getGithubIssueId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public Integer value4() {
        return getNumber();
    }

    @Override
    public IssueState value5() {
        return getState();
    }

    @Override
    public String value6() {
        return getUrl();
    }

    @Override
    public JSONB value7() {
        return getGithubUser();
    }

    @Override
    public JSONB value8() {
        return getAssignees();
    }

    @Override
    public String value9() {
        return getRepoName();
    }

    @Override
    public String value10() {
        return getRepoUrl();
    }

    @Override
    public OffsetDateTime value11() {
        return getOpenedAt();
    }

    @Override
    public IssueRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public IssueRecord value2(Integer value) {
        setGithubIssueId(value);
        return this;
    }

    @Override
    public IssueRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public IssueRecord value4(Integer value) {
        setNumber(value);
        return this;
    }

    @Override
    public IssueRecord value5(IssueState value) {
        setState(value);
        return this;
    }

    @Override
    public IssueRecord value6(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public IssueRecord value7(JSONB value) {
        setGithubUser(value);
        return this;
    }

    @Override
    public IssueRecord value8(JSONB value) {
        setAssignees(value);
        return this;
    }

    @Override
    public IssueRecord value9(String value) {
        setRepoName(value);
        return this;
    }

    @Override
    public IssueRecord value10(String value) {
        setRepoUrl(value);
        return this;
    }

    @Override
    public IssueRecord value11(OffsetDateTime value) {
        setOpenedAt(value);
        return this;
    }

    @Override
    public IssueRecord values(UUID value1, Integer value2, String value3, Integer value4, IssueState value5, String value6, JSONB value7, JSONB value8, String value9, String value10, OffsetDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IssueRecord
     */
    public IssueRecord() {
        super(Issue.ISSUE);
    }

    /**
     * Create a detached, initialised IssueRecord
     */
    public IssueRecord(UUID id, Integer githubIssueId, String title, Integer number, IssueState state, String url, JSONB githubUser, JSONB assignees, String repoName, String repoUrl, OffsetDateTime openedAt) {
        super(Issue.ISSUE);

        setId(id);
        setGithubIssueId(githubIssueId);
        setTitle(title);
        setNumber(number);
        setState(state);
        setUrl(url);
        setGithubUser(githubUser);
        setAssignees(assignees);
        setRepoName(repoName);
        setRepoUrl(repoUrl);
        setOpenedAt(openedAt);
    }
}
